# enables additional runtime safety checks, assertions, and verbose warnings
# recommended for development, should be false for production
# has a noticeable performance overhead
SAFETY=true

# enables detailed statistics tracking in the tlsf allocator
# has a slight performance overhead
TLSF_STATS=true

# enables verbose logging for the build tools
VERBOSE_BT=false

# enables debug features
DEBUG=false

# runtime & compile-time log filtering
# ------------------------------------
# this variable controls both build-time code stripping and runtime log filtering with a single set of rules
#
# warning: the build-time process is destructive
# if a log level is filtered out at compile-time by these rules, it cannot be re-enabled at runtime without recompiling
#
# format:
# a comma-separated list of `pattern=level` rules
# - pattern: a literal string, a wildcard pattern (*), or a /regex/
# - level: one of `trace`, `debug`, `info`, `success`, `warn`, `error`, `critical`, `assert`
#
# rules are evaluated in order, and the *first* pattern that matches a log's namespace is used
# a pattern without a `=level` is a shorthand for `=trace`
#
# examples:
#
# global level: show only warnings and errors for all packages
# LOG_FILTERS="*=warn"
#
# package level: show everything for ecs-core, but only errors for the math package
# LOG_FILTERS="@eldritch-engine/ecs-core=trace, @eldritch-engine/math=error"
#
# subdirectory level: enable detailed logging for the entire allocator system
# LOG_FILTERS="*guerrero-core/runtime/allocator*=trace, *=warn"
#
# file level: silence a specific noisy file by setting its level to error
# LOG_FILTERS="*ecs-core/src/world.ts=error, *=info"
#
# class level: get trace-level logs from `MasterScheduler` only, and info for everything else
# LOG_FILTERS="*::MasterScheduler::*=trace, *=info"
#
# method level: silence a specific noisy method by setting its level to warn
# LOG_FILTERS="*::rebuild_all_execution_plans_if_dirty=warn, *=trace"
#
# combining patterns: show everything by default, but silence the renderer and a specific physics system
# LOG_FILTERS="/@eldritch-engine\/plugin-renderer.*/=warn, *::PhysicsCollisionSystem::*=warn, *=trace"
#
# shorthand for trace: this is equivalent to `core::*=trace, physics::system::*=trace`
# LOG_FILTERS="core::*, physics::system::*"
#
# if unset, a default level of 'info' is used for all logs
LOG_FILTERS=""